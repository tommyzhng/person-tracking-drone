# Byte-compiled / optimized / DLL files
__pycache__/
*.py[cod]
*$py.class


# Analysis File
Analysis/

# Distribution / packaging
.Python
build/
develop-eggs/
dist/
downloads/
eggs/
.eggs/
lib64/
parts/
sdist/
var/
wheels/
share/python-wheels/
*.egg-info/
.installed.cfg
*.egg
MANIFEST

# PyInstaller
#  Usually these files are written by a python script from a template
#  before PyInstaller builds the exe, so as to inject date/other infos into it.
*.manifest
*.spec

# Installer logs
pip-log.txt
pip-delete-this-directory.txt

# Unit test / coverage reports
htmlcov/
.tox/
.nox/
.coverage
.coverage.*
.cache
nosetests.xml
coverage.xml
*.cover
*.py,cover
.hypothesis/
.pytest_cache/
cover/

# Translations
*.mo
*.pot

# Django stuff:
*.log
local_settings.py
db.sqlite3
db.sqlite3-journal

# Flask stuff:
instance/
.webassets-cache

# Scrapy stuff:
.scrapy

# Sphinx documentation
docs/_build/

# PyBuilder
.pybuilder/
target/

# Jupyter Notebook
.ipynb_checkpoints

# IPython
profile_default/
ipython_config.py

# pyenv
#   For a library or package, you might want to ignore these files since the code is
#   intended to run in multiple environments; otherwise, check them in:
# .python-version

# pipenv
#   According to pypa/pipenv#598, it is recommended to include Pipfile.lock in version control.
#   However, in case of collaboration, if having platform-specific dependencies or dependencies
#   having no cross-platform support, pipenv may install dependencies that don't work, or not
#   install all needed dependencies.
#Pipfile.lock

# poetry
#   Similar to Pipfile.lock, it is generally recommended to include poetry.lock in version control.
#   This is especially recommended for binary packages to ensure reproducibility, and is more
#   commonly ignored for libraries.
#   https://python-poetry.org/docs/basic-usage/#commit-your-poetrylock-file-to-version-control
#poetry.lock

# pdm
#   Similar to Pipfile.lock, it is generally recommended to include pdm.lock in version control.
#pdm.lock
#   pdm stores project-wide configurations in .pdm.toml, but it is recommended to not include it
#   in version control.
#   https://pdm.fming.dev/#use-with-ide
.pdm.toml

# PEP 582; used by e.g. github.com/David-OConnor/pyflow and github.com/pdm-project/pdm
__pypackages__/

# Celery stuff
celerybeat-schedule
celerybeat.pid

# SageMath parsed files
*.sage.py

# Environments
.env
.venv
env/
venv/
ENV/
env.bak/
venv.bak/

# Spyder project settings
.spyderproject
.spyproject

# Rope project settings
.ropeproject

# mkdocs documentation
/site

# mypy
.mypy_cache/
.dmypy.json
dmypy.json

# Pyre type checker
.pyre/

# pytype static type analyzer
.pytype/

# Cython debug symbols
cython_debug/

# PyCharm
#  JetBrains specific template is maintained in a separate JetBrains.gitignore that can
#  be found at https://github.com/github/gitignore/blob/main/Global/JetBrains.gitignore
#  and can be added to the global gitignore or merged into this file.  For a more nuclear
#  option (not recommended) you can uncomment the following to ignore the entire idea folder.
#.idea/


# Ardupilot
/.lock-waf*
/.waf*
/Tools/autotest/aircraft/Rascal/reset.xml
/Tools/autotest/ch7_mission.txt
/Tools/autotest/param_metadata/Parameters.html
/Tools/autotest/param_metadata/Parameters.rst
/Tools/autotest/param_metadata/ParametersLatex.rst
/Tools/autotest/param_metadata/Parameters.wiki
/Tools/autotest/param_metadata/Parameters.md
/Tools/autotest/param_metadata/apm.pdef.xml
/Tools/autotest/param_metadata/apm.pdef.json
/Tools/autotest/jsb_sim/fgout.xml
/Tools/autotest/jsb_sim/rascal_test.xml
/Tools/autotest/jsbsim_fgout_0.xml
/Tools/autotest/jsbsim_start_0.xml
/Tools/autotest/rover-ch7_mission.txt
/tmp/*
# Exclude all bins but allow font bins and bootloaders
*.bin
!*_bl.bin
!font*.bin
*.d
*.dfu
*.dll
*.elf
*.exe
*.generated.h
*.hex
*.lst
*.o
*.obj
*.px4
*.pyc
*.tlog
*.tlog.raw
*.vbrain
*.vrx
*.zip
!Tools/autotest/tilecache/**/*.zip
*~
.*.swo
.*.swp
*.i
*.ii
.DS_Store
.autotools
.built
.context
.cproject
.pydevproject
.depend
.directory
.metadata/
.project
.settings/
.tags
.tags_sorted_by_file
.vagrant
Tools/vagrant/*.log
Rover/test.Rover/
Rover/way.txt
ArduCopter/Debug/
ArduCopter/arducopter.exe.stackdump
ArduCopter/fence.txt
ArduCopter/ral.txt
ArduCopter/test.ArduCopter/
ArduCopter/test/*
ArduCopter/way.txt
ArduPlane/test.ArduPlane/
ArduPlane/test/*
ArduPlane/way.txt
Build.Rover/*
Build.AntennaTracker/*
Build.ArduCopter/*
Build.ArduPlane/*
Build.ArduSub/*
CMakeCache.txt
CMakeFiles
LASTLOG.TXT
Make.dep
Thumbs.db
autotest.lck
build
cmake_install.cmake
cscope.in.out
cscope.out
cscope.po.out
dataflash.bin
eeprom.bin
index.html
logs/
mav.log
mav.log.raw
mav.parm
/defaults.parm
/ArduCopter/defaults.parm
/ArduPlane/defaults.parm
/AntennaTracker/defaults.parm
/ArduSub/defaults.parm
/Blimp/defaults.parm
/Rover/defaults.parm
mk/PX4/ROMFS/default.parm
module.mk
serialsent.raw
status.txt
tags
terrain/
test.ArduCopter/*
GPATH
GRTAGS
GTAGS
*.apj
.gdbinit
/.vscode
/.history
Parameters.html
Parameters.md
Parameters.rst
Parameters.wiki
ParameterMetaDataBackup.xml
ParameterMetaData.xml
apm.pdef.xml
apm.pdef.json
parameters.edn
LogMessages.html
LogMessages.rst
LogMessages.xml
# JetBrains IDE files
.idea/*
# CMake
cmake-build-*/
/reports/
/GCOV_*.log
way.txt
*.wbproj
*.wbproj
segv_*out
/scripts/
/repl/
/Rover/scripts/
/Rover/repl/
/AntennaTracker/scripts/
/AntennaTracker/repl/
/ArduCopter/scripts/
/ArduCopter/repl/
/ArduPlane/scripts/
/ArduPlane/repl/
/ArduSub/scripts/
/ArduSub/repl/
persistent.dat
dumpstack_*out
build.tmp.binaries/
tasklist.json
modules/esp_idf
tensorflowMethod/person_detection/testing.png
